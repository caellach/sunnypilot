#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_604043209846572052) {
   out_604043209846572052[0] = 0;
   out_604043209846572052[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_604043209846572052[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_604043209846572052[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_604043209846572052[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_604043209846572052[5] = -sin(in_vec[1]);
   out_604043209846572052[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_604043209846572052[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_604043209846572052[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_604043209846572052[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_604043209846572052[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_604043209846572052[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_604043209846572052[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_604043209846572052[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_604043209846572052[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_604043209846572052[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_604043209846572052[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_604043209846572052[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5815918021574383256) {
   out_5815918021574383256[0] = delta_x[0] + nom_x[0];
   out_5815918021574383256[1] = delta_x[1] + nom_x[1];
   out_5815918021574383256[2] = delta_x[2] + nom_x[2];
   out_5815918021574383256[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5815918021574383256[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5815918021574383256[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5815918021574383256[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5815918021574383256[7] = delta_x[6] + nom_x[7];
   out_5815918021574383256[8] = delta_x[7] + nom_x[8];
   out_5815918021574383256[9] = delta_x[8] + nom_x[9];
   out_5815918021574383256[10] = delta_x[9] + nom_x[10];
   out_5815918021574383256[11] = delta_x[10] + nom_x[11];
   out_5815918021574383256[12] = delta_x[11] + nom_x[12];
   out_5815918021574383256[13] = delta_x[12] + nom_x[13];
   out_5815918021574383256[14] = delta_x[13] + nom_x[14];
   out_5815918021574383256[15] = delta_x[14] + nom_x[15];
   out_5815918021574383256[16] = delta_x[15] + nom_x[16];
   out_5815918021574383256[17] = delta_x[16] + nom_x[17];
   out_5815918021574383256[18] = delta_x[17] + nom_x[18];
   out_5815918021574383256[19] = delta_x[18] + nom_x[19];
   out_5815918021574383256[20] = delta_x[19] + nom_x[20];
   out_5815918021574383256[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_405016028537791310) {
   out_405016028537791310[0] = -nom_x[0] + true_x[0];
   out_405016028537791310[1] = -nom_x[1] + true_x[1];
   out_405016028537791310[2] = -nom_x[2] + true_x[2];
   out_405016028537791310[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_405016028537791310[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_405016028537791310[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_405016028537791310[6] = -nom_x[7] + true_x[7];
   out_405016028537791310[7] = -nom_x[8] + true_x[8];
   out_405016028537791310[8] = -nom_x[9] + true_x[9];
   out_405016028537791310[9] = -nom_x[10] + true_x[10];
   out_405016028537791310[10] = -nom_x[11] + true_x[11];
   out_405016028537791310[11] = -nom_x[12] + true_x[12];
   out_405016028537791310[12] = -nom_x[13] + true_x[13];
   out_405016028537791310[13] = -nom_x[14] + true_x[14];
   out_405016028537791310[14] = -nom_x[15] + true_x[15];
   out_405016028537791310[15] = -nom_x[16] + true_x[16];
   out_405016028537791310[16] = -nom_x[17] + true_x[17];
   out_405016028537791310[17] = -nom_x[18] + true_x[18];
   out_405016028537791310[18] = -nom_x[19] + true_x[19];
   out_405016028537791310[19] = -nom_x[20] + true_x[20];
   out_405016028537791310[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6060298500008698159) {
   out_6060298500008698159[0] = 1.0;
   out_6060298500008698159[1] = 0;
   out_6060298500008698159[2] = 0;
   out_6060298500008698159[3] = 0;
   out_6060298500008698159[4] = 0;
   out_6060298500008698159[5] = 0;
   out_6060298500008698159[6] = 0;
   out_6060298500008698159[7] = 0;
   out_6060298500008698159[8] = 0;
   out_6060298500008698159[9] = 0;
   out_6060298500008698159[10] = 0;
   out_6060298500008698159[11] = 0;
   out_6060298500008698159[12] = 0;
   out_6060298500008698159[13] = 0;
   out_6060298500008698159[14] = 0;
   out_6060298500008698159[15] = 0;
   out_6060298500008698159[16] = 0;
   out_6060298500008698159[17] = 0;
   out_6060298500008698159[18] = 0;
   out_6060298500008698159[19] = 0;
   out_6060298500008698159[20] = 0;
   out_6060298500008698159[21] = 0;
   out_6060298500008698159[22] = 1.0;
   out_6060298500008698159[23] = 0;
   out_6060298500008698159[24] = 0;
   out_6060298500008698159[25] = 0;
   out_6060298500008698159[26] = 0;
   out_6060298500008698159[27] = 0;
   out_6060298500008698159[28] = 0;
   out_6060298500008698159[29] = 0;
   out_6060298500008698159[30] = 0;
   out_6060298500008698159[31] = 0;
   out_6060298500008698159[32] = 0;
   out_6060298500008698159[33] = 0;
   out_6060298500008698159[34] = 0;
   out_6060298500008698159[35] = 0;
   out_6060298500008698159[36] = 0;
   out_6060298500008698159[37] = 0;
   out_6060298500008698159[38] = 0;
   out_6060298500008698159[39] = 0;
   out_6060298500008698159[40] = 0;
   out_6060298500008698159[41] = 0;
   out_6060298500008698159[42] = 0;
   out_6060298500008698159[43] = 0;
   out_6060298500008698159[44] = 1.0;
   out_6060298500008698159[45] = 0;
   out_6060298500008698159[46] = 0;
   out_6060298500008698159[47] = 0;
   out_6060298500008698159[48] = 0;
   out_6060298500008698159[49] = 0;
   out_6060298500008698159[50] = 0;
   out_6060298500008698159[51] = 0;
   out_6060298500008698159[52] = 0;
   out_6060298500008698159[53] = 0;
   out_6060298500008698159[54] = 0;
   out_6060298500008698159[55] = 0;
   out_6060298500008698159[56] = 0;
   out_6060298500008698159[57] = 0;
   out_6060298500008698159[58] = 0;
   out_6060298500008698159[59] = 0;
   out_6060298500008698159[60] = 0;
   out_6060298500008698159[61] = 0;
   out_6060298500008698159[62] = 0;
   out_6060298500008698159[63] = 0;
   out_6060298500008698159[64] = 0;
   out_6060298500008698159[65] = 0;
   out_6060298500008698159[66] = -0.5*state[4];
   out_6060298500008698159[67] = -0.5*state[5];
   out_6060298500008698159[68] = -0.5*state[6];
   out_6060298500008698159[69] = 0;
   out_6060298500008698159[70] = 0;
   out_6060298500008698159[71] = 0;
   out_6060298500008698159[72] = 0;
   out_6060298500008698159[73] = 0;
   out_6060298500008698159[74] = 0;
   out_6060298500008698159[75] = 0;
   out_6060298500008698159[76] = 0;
   out_6060298500008698159[77] = 0;
   out_6060298500008698159[78] = 0;
   out_6060298500008698159[79] = 0;
   out_6060298500008698159[80] = 0;
   out_6060298500008698159[81] = 0;
   out_6060298500008698159[82] = 0;
   out_6060298500008698159[83] = 0;
   out_6060298500008698159[84] = 0;
   out_6060298500008698159[85] = 0;
   out_6060298500008698159[86] = 0;
   out_6060298500008698159[87] = 0.5*state[3];
   out_6060298500008698159[88] = 0.5*state[6];
   out_6060298500008698159[89] = -0.5*state[5];
   out_6060298500008698159[90] = 0;
   out_6060298500008698159[91] = 0;
   out_6060298500008698159[92] = 0;
   out_6060298500008698159[93] = 0;
   out_6060298500008698159[94] = 0;
   out_6060298500008698159[95] = 0;
   out_6060298500008698159[96] = 0;
   out_6060298500008698159[97] = 0;
   out_6060298500008698159[98] = 0;
   out_6060298500008698159[99] = 0;
   out_6060298500008698159[100] = 0;
   out_6060298500008698159[101] = 0;
   out_6060298500008698159[102] = 0;
   out_6060298500008698159[103] = 0;
   out_6060298500008698159[104] = 0;
   out_6060298500008698159[105] = 0;
   out_6060298500008698159[106] = 0;
   out_6060298500008698159[107] = 0;
   out_6060298500008698159[108] = -0.5*state[6];
   out_6060298500008698159[109] = 0.5*state[3];
   out_6060298500008698159[110] = 0.5*state[4];
   out_6060298500008698159[111] = 0;
   out_6060298500008698159[112] = 0;
   out_6060298500008698159[113] = 0;
   out_6060298500008698159[114] = 0;
   out_6060298500008698159[115] = 0;
   out_6060298500008698159[116] = 0;
   out_6060298500008698159[117] = 0;
   out_6060298500008698159[118] = 0;
   out_6060298500008698159[119] = 0;
   out_6060298500008698159[120] = 0;
   out_6060298500008698159[121] = 0;
   out_6060298500008698159[122] = 0;
   out_6060298500008698159[123] = 0;
   out_6060298500008698159[124] = 0;
   out_6060298500008698159[125] = 0;
   out_6060298500008698159[126] = 0;
   out_6060298500008698159[127] = 0;
   out_6060298500008698159[128] = 0;
   out_6060298500008698159[129] = 0.5*state[5];
   out_6060298500008698159[130] = -0.5*state[4];
   out_6060298500008698159[131] = 0.5*state[3];
   out_6060298500008698159[132] = 0;
   out_6060298500008698159[133] = 0;
   out_6060298500008698159[134] = 0;
   out_6060298500008698159[135] = 0;
   out_6060298500008698159[136] = 0;
   out_6060298500008698159[137] = 0;
   out_6060298500008698159[138] = 0;
   out_6060298500008698159[139] = 0;
   out_6060298500008698159[140] = 0;
   out_6060298500008698159[141] = 0;
   out_6060298500008698159[142] = 0;
   out_6060298500008698159[143] = 0;
   out_6060298500008698159[144] = 0;
   out_6060298500008698159[145] = 0;
   out_6060298500008698159[146] = 0;
   out_6060298500008698159[147] = 0;
   out_6060298500008698159[148] = 0;
   out_6060298500008698159[149] = 0;
   out_6060298500008698159[150] = 0;
   out_6060298500008698159[151] = 0;
   out_6060298500008698159[152] = 0;
   out_6060298500008698159[153] = 1.0;
   out_6060298500008698159[154] = 0;
   out_6060298500008698159[155] = 0;
   out_6060298500008698159[156] = 0;
   out_6060298500008698159[157] = 0;
   out_6060298500008698159[158] = 0;
   out_6060298500008698159[159] = 0;
   out_6060298500008698159[160] = 0;
   out_6060298500008698159[161] = 0;
   out_6060298500008698159[162] = 0;
   out_6060298500008698159[163] = 0;
   out_6060298500008698159[164] = 0;
   out_6060298500008698159[165] = 0;
   out_6060298500008698159[166] = 0;
   out_6060298500008698159[167] = 0;
   out_6060298500008698159[168] = 0;
   out_6060298500008698159[169] = 0;
   out_6060298500008698159[170] = 0;
   out_6060298500008698159[171] = 0;
   out_6060298500008698159[172] = 0;
   out_6060298500008698159[173] = 0;
   out_6060298500008698159[174] = 0;
   out_6060298500008698159[175] = 1.0;
   out_6060298500008698159[176] = 0;
   out_6060298500008698159[177] = 0;
   out_6060298500008698159[178] = 0;
   out_6060298500008698159[179] = 0;
   out_6060298500008698159[180] = 0;
   out_6060298500008698159[181] = 0;
   out_6060298500008698159[182] = 0;
   out_6060298500008698159[183] = 0;
   out_6060298500008698159[184] = 0;
   out_6060298500008698159[185] = 0;
   out_6060298500008698159[186] = 0;
   out_6060298500008698159[187] = 0;
   out_6060298500008698159[188] = 0;
   out_6060298500008698159[189] = 0;
   out_6060298500008698159[190] = 0;
   out_6060298500008698159[191] = 0;
   out_6060298500008698159[192] = 0;
   out_6060298500008698159[193] = 0;
   out_6060298500008698159[194] = 0;
   out_6060298500008698159[195] = 0;
   out_6060298500008698159[196] = 0;
   out_6060298500008698159[197] = 1.0;
   out_6060298500008698159[198] = 0;
   out_6060298500008698159[199] = 0;
   out_6060298500008698159[200] = 0;
   out_6060298500008698159[201] = 0;
   out_6060298500008698159[202] = 0;
   out_6060298500008698159[203] = 0;
   out_6060298500008698159[204] = 0;
   out_6060298500008698159[205] = 0;
   out_6060298500008698159[206] = 0;
   out_6060298500008698159[207] = 0;
   out_6060298500008698159[208] = 0;
   out_6060298500008698159[209] = 0;
   out_6060298500008698159[210] = 0;
   out_6060298500008698159[211] = 0;
   out_6060298500008698159[212] = 0;
   out_6060298500008698159[213] = 0;
   out_6060298500008698159[214] = 0;
   out_6060298500008698159[215] = 0;
   out_6060298500008698159[216] = 0;
   out_6060298500008698159[217] = 0;
   out_6060298500008698159[218] = 0;
   out_6060298500008698159[219] = 1.0;
   out_6060298500008698159[220] = 0;
   out_6060298500008698159[221] = 0;
   out_6060298500008698159[222] = 0;
   out_6060298500008698159[223] = 0;
   out_6060298500008698159[224] = 0;
   out_6060298500008698159[225] = 0;
   out_6060298500008698159[226] = 0;
   out_6060298500008698159[227] = 0;
   out_6060298500008698159[228] = 0;
   out_6060298500008698159[229] = 0;
   out_6060298500008698159[230] = 0;
   out_6060298500008698159[231] = 0;
   out_6060298500008698159[232] = 0;
   out_6060298500008698159[233] = 0;
   out_6060298500008698159[234] = 0;
   out_6060298500008698159[235] = 0;
   out_6060298500008698159[236] = 0;
   out_6060298500008698159[237] = 0;
   out_6060298500008698159[238] = 0;
   out_6060298500008698159[239] = 0;
   out_6060298500008698159[240] = 0;
   out_6060298500008698159[241] = 1.0;
   out_6060298500008698159[242] = 0;
   out_6060298500008698159[243] = 0;
   out_6060298500008698159[244] = 0;
   out_6060298500008698159[245] = 0;
   out_6060298500008698159[246] = 0;
   out_6060298500008698159[247] = 0;
   out_6060298500008698159[248] = 0;
   out_6060298500008698159[249] = 0;
   out_6060298500008698159[250] = 0;
   out_6060298500008698159[251] = 0;
   out_6060298500008698159[252] = 0;
   out_6060298500008698159[253] = 0;
   out_6060298500008698159[254] = 0;
   out_6060298500008698159[255] = 0;
   out_6060298500008698159[256] = 0;
   out_6060298500008698159[257] = 0;
   out_6060298500008698159[258] = 0;
   out_6060298500008698159[259] = 0;
   out_6060298500008698159[260] = 0;
   out_6060298500008698159[261] = 0;
   out_6060298500008698159[262] = 0;
   out_6060298500008698159[263] = 1.0;
   out_6060298500008698159[264] = 0;
   out_6060298500008698159[265] = 0;
   out_6060298500008698159[266] = 0;
   out_6060298500008698159[267] = 0;
   out_6060298500008698159[268] = 0;
   out_6060298500008698159[269] = 0;
   out_6060298500008698159[270] = 0;
   out_6060298500008698159[271] = 0;
   out_6060298500008698159[272] = 0;
   out_6060298500008698159[273] = 0;
   out_6060298500008698159[274] = 0;
   out_6060298500008698159[275] = 0;
   out_6060298500008698159[276] = 0;
   out_6060298500008698159[277] = 0;
   out_6060298500008698159[278] = 0;
   out_6060298500008698159[279] = 0;
   out_6060298500008698159[280] = 0;
   out_6060298500008698159[281] = 0;
   out_6060298500008698159[282] = 0;
   out_6060298500008698159[283] = 0;
   out_6060298500008698159[284] = 0;
   out_6060298500008698159[285] = 1.0;
   out_6060298500008698159[286] = 0;
   out_6060298500008698159[287] = 0;
   out_6060298500008698159[288] = 0;
   out_6060298500008698159[289] = 0;
   out_6060298500008698159[290] = 0;
   out_6060298500008698159[291] = 0;
   out_6060298500008698159[292] = 0;
   out_6060298500008698159[293] = 0;
   out_6060298500008698159[294] = 0;
   out_6060298500008698159[295] = 0;
   out_6060298500008698159[296] = 0;
   out_6060298500008698159[297] = 0;
   out_6060298500008698159[298] = 0;
   out_6060298500008698159[299] = 0;
   out_6060298500008698159[300] = 0;
   out_6060298500008698159[301] = 0;
   out_6060298500008698159[302] = 0;
   out_6060298500008698159[303] = 0;
   out_6060298500008698159[304] = 0;
   out_6060298500008698159[305] = 0;
   out_6060298500008698159[306] = 0;
   out_6060298500008698159[307] = 1.0;
   out_6060298500008698159[308] = 0;
   out_6060298500008698159[309] = 0;
   out_6060298500008698159[310] = 0;
   out_6060298500008698159[311] = 0;
   out_6060298500008698159[312] = 0;
   out_6060298500008698159[313] = 0;
   out_6060298500008698159[314] = 0;
   out_6060298500008698159[315] = 0;
   out_6060298500008698159[316] = 0;
   out_6060298500008698159[317] = 0;
   out_6060298500008698159[318] = 0;
   out_6060298500008698159[319] = 0;
   out_6060298500008698159[320] = 0;
   out_6060298500008698159[321] = 0;
   out_6060298500008698159[322] = 0;
   out_6060298500008698159[323] = 0;
   out_6060298500008698159[324] = 0;
   out_6060298500008698159[325] = 0;
   out_6060298500008698159[326] = 0;
   out_6060298500008698159[327] = 0;
   out_6060298500008698159[328] = 0;
   out_6060298500008698159[329] = 1.0;
   out_6060298500008698159[330] = 0;
   out_6060298500008698159[331] = 0;
   out_6060298500008698159[332] = 0;
   out_6060298500008698159[333] = 0;
   out_6060298500008698159[334] = 0;
   out_6060298500008698159[335] = 0;
   out_6060298500008698159[336] = 0;
   out_6060298500008698159[337] = 0;
   out_6060298500008698159[338] = 0;
   out_6060298500008698159[339] = 0;
   out_6060298500008698159[340] = 0;
   out_6060298500008698159[341] = 0;
   out_6060298500008698159[342] = 0;
   out_6060298500008698159[343] = 0;
   out_6060298500008698159[344] = 0;
   out_6060298500008698159[345] = 0;
   out_6060298500008698159[346] = 0;
   out_6060298500008698159[347] = 0;
   out_6060298500008698159[348] = 0;
   out_6060298500008698159[349] = 0;
   out_6060298500008698159[350] = 0;
   out_6060298500008698159[351] = 1.0;
   out_6060298500008698159[352] = 0;
   out_6060298500008698159[353] = 0;
   out_6060298500008698159[354] = 0;
   out_6060298500008698159[355] = 0;
   out_6060298500008698159[356] = 0;
   out_6060298500008698159[357] = 0;
   out_6060298500008698159[358] = 0;
   out_6060298500008698159[359] = 0;
   out_6060298500008698159[360] = 0;
   out_6060298500008698159[361] = 0;
   out_6060298500008698159[362] = 0;
   out_6060298500008698159[363] = 0;
   out_6060298500008698159[364] = 0;
   out_6060298500008698159[365] = 0;
   out_6060298500008698159[366] = 0;
   out_6060298500008698159[367] = 0;
   out_6060298500008698159[368] = 0;
   out_6060298500008698159[369] = 0;
   out_6060298500008698159[370] = 0;
   out_6060298500008698159[371] = 0;
   out_6060298500008698159[372] = 0;
   out_6060298500008698159[373] = 1.0;
   out_6060298500008698159[374] = 0;
   out_6060298500008698159[375] = 0;
   out_6060298500008698159[376] = 0;
   out_6060298500008698159[377] = 0;
   out_6060298500008698159[378] = 0;
   out_6060298500008698159[379] = 0;
   out_6060298500008698159[380] = 0;
   out_6060298500008698159[381] = 0;
   out_6060298500008698159[382] = 0;
   out_6060298500008698159[383] = 0;
   out_6060298500008698159[384] = 0;
   out_6060298500008698159[385] = 0;
   out_6060298500008698159[386] = 0;
   out_6060298500008698159[387] = 0;
   out_6060298500008698159[388] = 0;
   out_6060298500008698159[389] = 0;
   out_6060298500008698159[390] = 0;
   out_6060298500008698159[391] = 0;
   out_6060298500008698159[392] = 0;
   out_6060298500008698159[393] = 0;
   out_6060298500008698159[394] = 0;
   out_6060298500008698159[395] = 1.0;
   out_6060298500008698159[396] = 0;
   out_6060298500008698159[397] = 0;
   out_6060298500008698159[398] = 0;
   out_6060298500008698159[399] = 0;
   out_6060298500008698159[400] = 0;
   out_6060298500008698159[401] = 0;
   out_6060298500008698159[402] = 0;
   out_6060298500008698159[403] = 0;
   out_6060298500008698159[404] = 0;
   out_6060298500008698159[405] = 0;
   out_6060298500008698159[406] = 0;
   out_6060298500008698159[407] = 0;
   out_6060298500008698159[408] = 0;
   out_6060298500008698159[409] = 0;
   out_6060298500008698159[410] = 0;
   out_6060298500008698159[411] = 0;
   out_6060298500008698159[412] = 0;
   out_6060298500008698159[413] = 0;
   out_6060298500008698159[414] = 0;
   out_6060298500008698159[415] = 0;
   out_6060298500008698159[416] = 0;
   out_6060298500008698159[417] = 1.0;
   out_6060298500008698159[418] = 0;
   out_6060298500008698159[419] = 0;
   out_6060298500008698159[420] = 0;
   out_6060298500008698159[421] = 0;
   out_6060298500008698159[422] = 0;
   out_6060298500008698159[423] = 0;
   out_6060298500008698159[424] = 0;
   out_6060298500008698159[425] = 0;
   out_6060298500008698159[426] = 0;
   out_6060298500008698159[427] = 0;
   out_6060298500008698159[428] = 0;
   out_6060298500008698159[429] = 0;
   out_6060298500008698159[430] = 0;
   out_6060298500008698159[431] = 0;
   out_6060298500008698159[432] = 0;
   out_6060298500008698159[433] = 0;
   out_6060298500008698159[434] = 0;
   out_6060298500008698159[435] = 0;
   out_6060298500008698159[436] = 0;
   out_6060298500008698159[437] = 0;
   out_6060298500008698159[438] = 0;
   out_6060298500008698159[439] = 1.0;
   out_6060298500008698159[440] = 0;
   out_6060298500008698159[441] = 0;
   out_6060298500008698159[442] = 0;
   out_6060298500008698159[443] = 0;
   out_6060298500008698159[444] = 0;
   out_6060298500008698159[445] = 0;
   out_6060298500008698159[446] = 0;
   out_6060298500008698159[447] = 0;
   out_6060298500008698159[448] = 0;
   out_6060298500008698159[449] = 0;
   out_6060298500008698159[450] = 0;
   out_6060298500008698159[451] = 0;
   out_6060298500008698159[452] = 0;
   out_6060298500008698159[453] = 0;
   out_6060298500008698159[454] = 0;
   out_6060298500008698159[455] = 0;
   out_6060298500008698159[456] = 0;
   out_6060298500008698159[457] = 0;
   out_6060298500008698159[458] = 0;
   out_6060298500008698159[459] = 0;
   out_6060298500008698159[460] = 0;
   out_6060298500008698159[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_234054100436222404) {
   out_234054100436222404[0] = dt*state[7] + state[0];
   out_234054100436222404[1] = dt*state[8] + state[1];
   out_234054100436222404[2] = dt*state[9] + state[2];
   out_234054100436222404[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_234054100436222404[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_234054100436222404[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_234054100436222404[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_234054100436222404[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_234054100436222404[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_234054100436222404[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_234054100436222404[10] = state[10];
   out_234054100436222404[11] = state[11];
   out_234054100436222404[12] = state[12];
   out_234054100436222404[13] = state[13];
   out_234054100436222404[14] = state[14];
   out_234054100436222404[15] = state[15];
   out_234054100436222404[16] = state[16];
   out_234054100436222404[17] = state[17];
   out_234054100436222404[18] = state[18];
   out_234054100436222404[19] = state[19];
   out_234054100436222404[20] = state[20];
   out_234054100436222404[21] = state[21];
}
void F_fun(double *state, double dt, double *out_98640869369304068) {
   out_98640869369304068[0] = 1;
   out_98640869369304068[1] = 0;
   out_98640869369304068[2] = 0;
   out_98640869369304068[3] = 0;
   out_98640869369304068[4] = 0;
   out_98640869369304068[5] = 0;
   out_98640869369304068[6] = dt;
   out_98640869369304068[7] = 0;
   out_98640869369304068[8] = 0;
   out_98640869369304068[9] = 0;
   out_98640869369304068[10] = 0;
   out_98640869369304068[11] = 0;
   out_98640869369304068[12] = 0;
   out_98640869369304068[13] = 0;
   out_98640869369304068[14] = 0;
   out_98640869369304068[15] = 0;
   out_98640869369304068[16] = 0;
   out_98640869369304068[17] = 0;
   out_98640869369304068[18] = 0;
   out_98640869369304068[19] = 0;
   out_98640869369304068[20] = 0;
   out_98640869369304068[21] = 0;
   out_98640869369304068[22] = 1;
   out_98640869369304068[23] = 0;
   out_98640869369304068[24] = 0;
   out_98640869369304068[25] = 0;
   out_98640869369304068[26] = 0;
   out_98640869369304068[27] = 0;
   out_98640869369304068[28] = dt;
   out_98640869369304068[29] = 0;
   out_98640869369304068[30] = 0;
   out_98640869369304068[31] = 0;
   out_98640869369304068[32] = 0;
   out_98640869369304068[33] = 0;
   out_98640869369304068[34] = 0;
   out_98640869369304068[35] = 0;
   out_98640869369304068[36] = 0;
   out_98640869369304068[37] = 0;
   out_98640869369304068[38] = 0;
   out_98640869369304068[39] = 0;
   out_98640869369304068[40] = 0;
   out_98640869369304068[41] = 0;
   out_98640869369304068[42] = 0;
   out_98640869369304068[43] = 0;
   out_98640869369304068[44] = 1;
   out_98640869369304068[45] = 0;
   out_98640869369304068[46] = 0;
   out_98640869369304068[47] = 0;
   out_98640869369304068[48] = 0;
   out_98640869369304068[49] = 0;
   out_98640869369304068[50] = dt;
   out_98640869369304068[51] = 0;
   out_98640869369304068[52] = 0;
   out_98640869369304068[53] = 0;
   out_98640869369304068[54] = 0;
   out_98640869369304068[55] = 0;
   out_98640869369304068[56] = 0;
   out_98640869369304068[57] = 0;
   out_98640869369304068[58] = 0;
   out_98640869369304068[59] = 0;
   out_98640869369304068[60] = 0;
   out_98640869369304068[61] = 0;
   out_98640869369304068[62] = 0;
   out_98640869369304068[63] = 0;
   out_98640869369304068[64] = 0;
   out_98640869369304068[65] = 0;
   out_98640869369304068[66] = 1;
   out_98640869369304068[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_98640869369304068[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_98640869369304068[69] = 0;
   out_98640869369304068[70] = 0;
   out_98640869369304068[71] = 0;
   out_98640869369304068[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_98640869369304068[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_98640869369304068[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_98640869369304068[75] = 0;
   out_98640869369304068[76] = 0;
   out_98640869369304068[77] = 0;
   out_98640869369304068[78] = 0;
   out_98640869369304068[79] = 0;
   out_98640869369304068[80] = 0;
   out_98640869369304068[81] = 0;
   out_98640869369304068[82] = 0;
   out_98640869369304068[83] = 0;
   out_98640869369304068[84] = 0;
   out_98640869369304068[85] = 0;
   out_98640869369304068[86] = 0;
   out_98640869369304068[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_98640869369304068[88] = 1;
   out_98640869369304068[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_98640869369304068[90] = 0;
   out_98640869369304068[91] = 0;
   out_98640869369304068[92] = 0;
   out_98640869369304068[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_98640869369304068[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_98640869369304068[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_98640869369304068[96] = 0;
   out_98640869369304068[97] = 0;
   out_98640869369304068[98] = 0;
   out_98640869369304068[99] = 0;
   out_98640869369304068[100] = 0;
   out_98640869369304068[101] = 0;
   out_98640869369304068[102] = 0;
   out_98640869369304068[103] = 0;
   out_98640869369304068[104] = 0;
   out_98640869369304068[105] = 0;
   out_98640869369304068[106] = 0;
   out_98640869369304068[107] = 0;
   out_98640869369304068[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_98640869369304068[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_98640869369304068[110] = 1;
   out_98640869369304068[111] = 0;
   out_98640869369304068[112] = 0;
   out_98640869369304068[113] = 0;
   out_98640869369304068[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_98640869369304068[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_98640869369304068[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_98640869369304068[117] = 0;
   out_98640869369304068[118] = 0;
   out_98640869369304068[119] = 0;
   out_98640869369304068[120] = 0;
   out_98640869369304068[121] = 0;
   out_98640869369304068[122] = 0;
   out_98640869369304068[123] = 0;
   out_98640869369304068[124] = 0;
   out_98640869369304068[125] = 0;
   out_98640869369304068[126] = 0;
   out_98640869369304068[127] = 0;
   out_98640869369304068[128] = 0;
   out_98640869369304068[129] = 0;
   out_98640869369304068[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_98640869369304068[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_98640869369304068[132] = 1;
   out_98640869369304068[133] = 0;
   out_98640869369304068[134] = 0;
   out_98640869369304068[135] = 0;
   out_98640869369304068[136] = 0;
   out_98640869369304068[137] = 0;
   out_98640869369304068[138] = 0;
   out_98640869369304068[139] = 0;
   out_98640869369304068[140] = 0;
   out_98640869369304068[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_98640869369304068[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_98640869369304068[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_98640869369304068[144] = 0;
   out_98640869369304068[145] = 0;
   out_98640869369304068[146] = 0;
   out_98640869369304068[147] = 0;
   out_98640869369304068[148] = 0;
   out_98640869369304068[149] = 0;
   out_98640869369304068[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_98640869369304068[151] = 0;
   out_98640869369304068[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_98640869369304068[153] = 0;
   out_98640869369304068[154] = 1;
   out_98640869369304068[155] = 0;
   out_98640869369304068[156] = 0;
   out_98640869369304068[157] = 0;
   out_98640869369304068[158] = 0;
   out_98640869369304068[159] = 0;
   out_98640869369304068[160] = 0;
   out_98640869369304068[161] = 0;
   out_98640869369304068[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_98640869369304068[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_98640869369304068[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_98640869369304068[165] = 0;
   out_98640869369304068[166] = 0;
   out_98640869369304068[167] = 0;
   out_98640869369304068[168] = 0;
   out_98640869369304068[169] = 0;
   out_98640869369304068[170] = 0;
   out_98640869369304068[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_98640869369304068[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_98640869369304068[173] = 0;
   out_98640869369304068[174] = 0;
   out_98640869369304068[175] = 0;
   out_98640869369304068[176] = 1;
   out_98640869369304068[177] = 0;
   out_98640869369304068[178] = 0;
   out_98640869369304068[179] = 0;
   out_98640869369304068[180] = 0;
   out_98640869369304068[181] = 0;
   out_98640869369304068[182] = 0;
   out_98640869369304068[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_98640869369304068[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_98640869369304068[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_98640869369304068[186] = 0;
   out_98640869369304068[187] = 0;
   out_98640869369304068[188] = 0;
   out_98640869369304068[189] = 0;
   out_98640869369304068[190] = 0;
   out_98640869369304068[191] = 0;
   out_98640869369304068[192] = 0;
   out_98640869369304068[193] = 0;
   out_98640869369304068[194] = 0;
   out_98640869369304068[195] = 0;
   out_98640869369304068[196] = 0;
   out_98640869369304068[197] = 0;
   out_98640869369304068[198] = 1;
   out_98640869369304068[199] = 0;
   out_98640869369304068[200] = 0;
   out_98640869369304068[201] = 0;
   out_98640869369304068[202] = 0;
   out_98640869369304068[203] = 0;
   out_98640869369304068[204] = 0;
   out_98640869369304068[205] = 0;
   out_98640869369304068[206] = 0;
   out_98640869369304068[207] = 0;
   out_98640869369304068[208] = 0;
   out_98640869369304068[209] = 0;
   out_98640869369304068[210] = 0;
   out_98640869369304068[211] = 0;
   out_98640869369304068[212] = 0;
   out_98640869369304068[213] = 0;
   out_98640869369304068[214] = 0;
   out_98640869369304068[215] = 0;
   out_98640869369304068[216] = 0;
   out_98640869369304068[217] = 0;
   out_98640869369304068[218] = 0;
   out_98640869369304068[219] = 0;
   out_98640869369304068[220] = 1;
   out_98640869369304068[221] = 0;
   out_98640869369304068[222] = 0;
   out_98640869369304068[223] = 0;
   out_98640869369304068[224] = 0;
   out_98640869369304068[225] = 0;
   out_98640869369304068[226] = 0;
   out_98640869369304068[227] = 0;
   out_98640869369304068[228] = 0;
   out_98640869369304068[229] = 0;
   out_98640869369304068[230] = 0;
   out_98640869369304068[231] = 0;
   out_98640869369304068[232] = 0;
   out_98640869369304068[233] = 0;
   out_98640869369304068[234] = 0;
   out_98640869369304068[235] = 0;
   out_98640869369304068[236] = 0;
   out_98640869369304068[237] = 0;
   out_98640869369304068[238] = 0;
   out_98640869369304068[239] = 0;
   out_98640869369304068[240] = 0;
   out_98640869369304068[241] = 0;
   out_98640869369304068[242] = 1;
   out_98640869369304068[243] = 0;
   out_98640869369304068[244] = 0;
   out_98640869369304068[245] = 0;
   out_98640869369304068[246] = 0;
   out_98640869369304068[247] = 0;
   out_98640869369304068[248] = 0;
   out_98640869369304068[249] = 0;
   out_98640869369304068[250] = 0;
   out_98640869369304068[251] = 0;
   out_98640869369304068[252] = 0;
   out_98640869369304068[253] = 0;
   out_98640869369304068[254] = 0;
   out_98640869369304068[255] = 0;
   out_98640869369304068[256] = 0;
   out_98640869369304068[257] = 0;
   out_98640869369304068[258] = 0;
   out_98640869369304068[259] = 0;
   out_98640869369304068[260] = 0;
   out_98640869369304068[261] = 0;
   out_98640869369304068[262] = 0;
   out_98640869369304068[263] = 0;
   out_98640869369304068[264] = 1;
   out_98640869369304068[265] = 0;
   out_98640869369304068[266] = 0;
   out_98640869369304068[267] = 0;
   out_98640869369304068[268] = 0;
   out_98640869369304068[269] = 0;
   out_98640869369304068[270] = 0;
   out_98640869369304068[271] = 0;
   out_98640869369304068[272] = 0;
   out_98640869369304068[273] = 0;
   out_98640869369304068[274] = 0;
   out_98640869369304068[275] = 0;
   out_98640869369304068[276] = 0;
   out_98640869369304068[277] = 0;
   out_98640869369304068[278] = 0;
   out_98640869369304068[279] = 0;
   out_98640869369304068[280] = 0;
   out_98640869369304068[281] = 0;
   out_98640869369304068[282] = 0;
   out_98640869369304068[283] = 0;
   out_98640869369304068[284] = 0;
   out_98640869369304068[285] = 0;
   out_98640869369304068[286] = 1;
   out_98640869369304068[287] = 0;
   out_98640869369304068[288] = 0;
   out_98640869369304068[289] = 0;
   out_98640869369304068[290] = 0;
   out_98640869369304068[291] = 0;
   out_98640869369304068[292] = 0;
   out_98640869369304068[293] = 0;
   out_98640869369304068[294] = 0;
   out_98640869369304068[295] = 0;
   out_98640869369304068[296] = 0;
   out_98640869369304068[297] = 0;
   out_98640869369304068[298] = 0;
   out_98640869369304068[299] = 0;
   out_98640869369304068[300] = 0;
   out_98640869369304068[301] = 0;
   out_98640869369304068[302] = 0;
   out_98640869369304068[303] = 0;
   out_98640869369304068[304] = 0;
   out_98640869369304068[305] = 0;
   out_98640869369304068[306] = 0;
   out_98640869369304068[307] = 0;
   out_98640869369304068[308] = 1;
   out_98640869369304068[309] = 0;
   out_98640869369304068[310] = 0;
   out_98640869369304068[311] = 0;
   out_98640869369304068[312] = 0;
   out_98640869369304068[313] = 0;
   out_98640869369304068[314] = 0;
   out_98640869369304068[315] = 0;
   out_98640869369304068[316] = 0;
   out_98640869369304068[317] = 0;
   out_98640869369304068[318] = 0;
   out_98640869369304068[319] = 0;
   out_98640869369304068[320] = 0;
   out_98640869369304068[321] = 0;
   out_98640869369304068[322] = 0;
   out_98640869369304068[323] = 0;
   out_98640869369304068[324] = 0;
   out_98640869369304068[325] = 0;
   out_98640869369304068[326] = 0;
   out_98640869369304068[327] = 0;
   out_98640869369304068[328] = 0;
   out_98640869369304068[329] = 0;
   out_98640869369304068[330] = 1;
   out_98640869369304068[331] = 0;
   out_98640869369304068[332] = 0;
   out_98640869369304068[333] = 0;
   out_98640869369304068[334] = 0;
   out_98640869369304068[335] = 0;
   out_98640869369304068[336] = 0;
   out_98640869369304068[337] = 0;
   out_98640869369304068[338] = 0;
   out_98640869369304068[339] = 0;
   out_98640869369304068[340] = 0;
   out_98640869369304068[341] = 0;
   out_98640869369304068[342] = 0;
   out_98640869369304068[343] = 0;
   out_98640869369304068[344] = 0;
   out_98640869369304068[345] = 0;
   out_98640869369304068[346] = 0;
   out_98640869369304068[347] = 0;
   out_98640869369304068[348] = 0;
   out_98640869369304068[349] = 0;
   out_98640869369304068[350] = 0;
   out_98640869369304068[351] = 0;
   out_98640869369304068[352] = 1;
   out_98640869369304068[353] = 0;
   out_98640869369304068[354] = 0;
   out_98640869369304068[355] = 0;
   out_98640869369304068[356] = 0;
   out_98640869369304068[357] = 0;
   out_98640869369304068[358] = 0;
   out_98640869369304068[359] = 0;
   out_98640869369304068[360] = 0;
   out_98640869369304068[361] = 0;
   out_98640869369304068[362] = 0;
   out_98640869369304068[363] = 0;
   out_98640869369304068[364] = 0;
   out_98640869369304068[365] = 0;
   out_98640869369304068[366] = 0;
   out_98640869369304068[367] = 0;
   out_98640869369304068[368] = 0;
   out_98640869369304068[369] = 0;
   out_98640869369304068[370] = 0;
   out_98640869369304068[371] = 0;
   out_98640869369304068[372] = 0;
   out_98640869369304068[373] = 0;
   out_98640869369304068[374] = 1;
   out_98640869369304068[375] = 0;
   out_98640869369304068[376] = 0;
   out_98640869369304068[377] = 0;
   out_98640869369304068[378] = 0;
   out_98640869369304068[379] = 0;
   out_98640869369304068[380] = 0;
   out_98640869369304068[381] = 0;
   out_98640869369304068[382] = 0;
   out_98640869369304068[383] = 0;
   out_98640869369304068[384] = 0;
   out_98640869369304068[385] = 0;
   out_98640869369304068[386] = 0;
   out_98640869369304068[387] = 0;
   out_98640869369304068[388] = 0;
   out_98640869369304068[389] = 0;
   out_98640869369304068[390] = 0;
   out_98640869369304068[391] = 0;
   out_98640869369304068[392] = 0;
   out_98640869369304068[393] = 0;
   out_98640869369304068[394] = 0;
   out_98640869369304068[395] = 0;
   out_98640869369304068[396] = 1;
   out_98640869369304068[397] = 0;
   out_98640869369304068[398] = 0;
   out_98640869369304068[399] = 0;
   out_98640869369304068[400] = 0;
   out_98640869369304068[401] = 0;
   out_98640869369304068[402] = 0;
   out_98640869369304068[403] = 0;
   out_98640869369304068[404] = 0;
   out_98640869369304068[405] = 0;
   out_98640869369304068[406] = 0;
   out_98640869369304068[407] = 0;
   out_98640869369304068[408] = 0;
   out_98640869369304068[409] = 0;
   out_98640869369304068[410] = 0;
   out_98640869369304068[411] = 0;
   out_98640869369304068[412] = 0;
   out_98640869369304068[413] = 0;
   out_98640869369304068[414] = 0;
   out_98640869369304068[415] = 0;
   out_98640869369304068[416] = 0;
   out_98640869369304068[417] = 0;
   out_98640869369304068[418] = 1;
   out_98640869369304068[419] = 0;
   out_98640869369304068[420] = 0;
   out_98640869369304068[421] = 0;
   out_98640869369304068[422] = 0;
   out_98640869369304068[423] = 0;
   out_98640869369304068[424] = 0;
   out_98640869369304068[425] = 0;
   out_98640869369304068[426] = 0;
   out_98640869369304068[427] = 0;
   out_98640869369304068[428] = 0;
   out_98640869369304068[429] = 0;
   out_98640869369304068[430] = 0;
   out_98640869369304068[431] = 0;
   out_98640869369304068[432] = 0;
   out_98640869369304068[433] = 0;
   out_98640869369304068[434] = 0;
   out_98640869369304068[435] = 0;
   out_98640869369304068[436] = 0;
   out_98640869369304068[437] = 0;
   out_98640869369304068[438] = 0;
   out_98640869369304068[439] = 0;
   out_98640869369304068[440] = 1;
}
void h_4(double *state, double *unused, double *out_1697093702201744346) {
   out_1697093702201744346[0] = state[10] + state[13];
   out_1697093702201744346[1] = state[11] + state[14];
   out_1697093702201744346[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_643021930242067437) {
   out_643021930242067437[0] = 0;
   out_643021930242067437[1] = 0;
   out_643021930242067437[2] = 0;
   out_643021930242067437[3] = 0;
   out_643021930242067437[4] = 0;
   out_643021930242067437[5] = 0;
   out_643021930242067437[6] = 0;
   out_643021930242067437[7] = 0;
   out_643021930242067437[8] = 0;
   out_643021930242067437[9] = 0;
   out_643021930242067437[10] = 1;
   out_643021930242067437[11] = 0;
   out_643021930242067437[12] = 0;
   out_643021930242067437[13] = 1;
   out_643021930242067437[14] = 0;
   out_643021930242067437[15] = 0;
   out_643021930242067437[16] = 0;
   out_643021930242067437[17] = 0;
   out_643021930242067437[18] = 0;
   out_643021930242067437[19] = 0;
   out_643021930242067437[20] = 0;
   out_643021930242067437[21] = 0;
   out_643021930242067437[22] = 0;
   out_643021930242067437[23] = 0;
   out_643021930242067437[24] = 0;
   out_643021930242067437[25] = 0;
   out_643021930242067437[26] = 0;
   out_643021930242067437[27] = 0;
   out_643021930242067437[28] = 0;
   out_643021930242067437[29] = 0;
   out_643021930242067437[30] = 0;
   out_643021930242067437[31] = 0;
   out_643021930242067437[32] = 0;
   out_643021930242067437[33] = 1;
   out_643021930242067437[34] = 0;
   out_643021930242067437[35] = 0;
   out_643021930242067437[36] = 1;
   out_643021930242067437[37] = 0;
   out_643021930242067437[38] = 0;
   out_643021930242067437[39] = 0;
   out_643021930242067437[40] = 0;
   out_643021930242067437[41] = 0;
   out_643021930242067437[42] = 0;
   out_643021930242067437[43] = 0;
   out_643021930242067437[44] = 0;
   out_643021930242067437[45] = 0;
   out_643021930242067437[46] = 0;
   out_643021930242067437[47] = 0;
   out_643021930242067437[48] = 0;
   out_643021930242067437[49] = 0;
   out_643021930242067437[50] = 0;
   out_643021930242067437[51] = 0;
   out_643021930242067437[52] = 0;
   out_643021930242067437[53] = 0;
   out_643021930242067437[54] = 0;
   out_643021930242067437[55] = 0;
   out_643021930242067437[56] = 1;
   out_643021930242067437[57] = 0;
   out_643021930242067437[58] = 0;
   out_643021930242067437[59] = 1;
   out_643021930242067437[60] = 0;
   out_643021930242067437[61] = 0;
   out_643021930242067437[62] = 0;
   out_643021930242067437[63] = 0;
   out_643021930242067437[64] = 0;
   out_643021930242067437[65] = 0;
}
void h_9(double *state, double *unused, double *out_2936430445939327715) {
   out_2936430445939327715[0] = state[10];
   out_2936430445939327715[1] = state[11];
   out_2936430445939327715[2] = state[12];
}
void H_9(double *state, double *unused, double *out_401832283612476792) {
   out_401832283612476792[0] = 0;
   out_401832283612476792[1] = 0;
   out_401832283612476792[2] = 0;
   out_401832283612476792[3] = 0;
   out_401832283612476792[4] = 0;
   out_401832283612476792[5] = 0;
   out_401832283612476792[6] = 0;
   out_401832283612476792[7] = 0;
   out_401832283612476792[8] = 0;
   out_401832283612476792[9] = 0;
   out_401832283612476792[10] = 1;
   out_401832283612476792[11] = 0;
   out_401832283612476792[12] = 0;
   out_401832283612476792[13] = 0;
   out_401832283612476792[14] = 0;
   out_401832283612476792[15] = 0;
   out_401832283612476792[16] = 0;
   out_401832283612476792[17] = 0;
   out_401832283612476792[18] = 0;
   out_401832283612476792[19] = 0;
   out_401832283612476792[20] = 0;
   out_401832283612476792[21] = 0;
   out_401832283612476792[22] = 0;
   out_401832283612476792[23] = 0;
   out_401832283612476792[24] = 0;
   out_401832283612476792[25] = 0;
   out_401832283612476792[26] = 0;
   out_401832283612476792[27] = 0;
   out_401832283612476792[28] = 0;
   out_401832283612476792[29] = 0;
   out_401832283612476792[30] = 0;
   out_401832283612476792[31] = 0;
   out_401832283612476792[32] = 0;
   out_401832283612476792[33] = 1;
   out_401832283612476792[34] = 0;
   out_401832283612476792[35] = 0;
   out_401832283612476792[36] = 0;
   out_401832283612476792[37] = 0;
   out_401832283612476792[38] = 0;
   out_401832283612476792[39] = 0;
   out_401832283612476792[40] = 0;
   out_401832283612476792[41] = 0;
   out_401832283612476792[42] = 0;
   out_401832283612476792[43] = 0;
   out_401832283612476792[44] = 0;
   out_401832283612476792[45] = 0;
   out_401832283612476792[46] = 0;
   out_401832283612476792[47] = 0;
   out_401832283612476792[48] = 0;
   out_401832283612476792[49] = 0;
   out_401832283612476792[50] = 0;
   out_401832283612476792[51] = 0;
   out_401832283612476792[52] = 0;
   out_401832283612476792[53] = 0;
   out_401832283612476792[54] = 0;
   out_401832283612476792[55] = 0;
   out_401832283612476792[56] = 1;
   out_401832283612476792[57] = 0;
   out_401832283612476792[58] = 0;
   out_401832283612476792[59] = 0;
   out_401832283612476792[60] = 0;
   out_401832283612476792[61] = 0;
   out_401832283612476792[62] = 0;
   out_401832283612476792[63] = 0;
   out_401832283612476792[64] = 0;
   out_401832283612476792[65] = 0;
}
void h_10(double *state, double *unused, double *out_4514559468563206809) {
   out_4514559468563206809[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4514559468563206809[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4514559468563206809[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1343937887048594844) {
   out_1343937887048594844[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1343937887048594844[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1343937887048594844[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1343937887048594844[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1343937887048594844[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1343937887048594844[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1343937887048594844[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1343937887048594844[7] = 0;
   out_1343937887048594844[8] = 0;
   out_1343937887048594844[9] = 0;
   out_1343937887048594844[10] = 0;
   out_1343937887048594844[11] = 0;
   out_1343937887048594844[12] = 0;
   out_1343937887048594844[13] = 0;
   out_1343937887048594844[14] = 0;
   out_1343937887048594844[15] = 0;
   out_1343937887048594844[16] = 1;
   out_1343937887048594844[17] = 0;
   out_1343937887048594844[18] = 0;
   out_1343937887048594844[19] = 1;
   out_1343937887048594844[20] = 0;
   out_1343937887048594844[21] = 0;
   out_1343937887048594844[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1343937887048594844[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1343937887048594844[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1343937887048594844[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1343937887048594844[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1343937887048594844[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1343937887048594844[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1343937887048594844[29] = 0;
   out_1343937887048594844[30] = 0;
   out_1343937887048594844[31] = 0;
   out_1343937887048594844[32] = 0;
   out_1343937887048594844[33] = 0;
   out_1343937887048594844[34] = 0;
   out_1343937887048594844[35] = 0;
   out_1343937887048594844[36] = 0;
   out_1343937887048594844[37] = 0;
   out_1343937887048594844[38] = 0;
   out_1343937887048594844[39] = 1;
   out_1343937887048594844[40] = 0;
   out_1343937887048594844[41] = 0;
   out_1343937887048594844[42] = 1;
   out_1343937887048594844[43] = 0;
   out_1343937887048594844[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1343937887048594844[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1343937887048594844[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1343937887048594844[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1343937887048594844[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1343937887048594844[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1343937887048594844[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1343937887048594844[51] = 0;
   out_1343937887048594844[52] = 0;
   out_1343937887048594844[53] = 0;
   out_1343937887048594844[54] = 0;
   out_1343937887048594844[55] = 0;
   out_1343937887048594844[56] = 0;
   out_1343937887048594844[57] = 0;
   out_1343937887048594844[58] = 0;
   out_1343937887048594844[59] = 0;
   out_1343937887048594844[60] = 0;
   out_1343937887048594844[61] = 0;
   out_1343937887048594844[62] = 1;
   out_1343937887048594844[63] = 0;
   out_1343937887048594844[64] = 0;
   out_1343937887048594844[65] = 1;
}
void h_12(double *state, double *unused, double *out_4782454166066213906) {
   out_4782454166066213906[0] = state[0];
   out_4782454166066213906[1] = state[1];
   out_4782454166066213906[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4376434477789894358) {
   out_4376434477789894358[0] = 1;
   out_4376434477789894358[1] = 0;
   out_4376434477789894358[2] = 0;
   out_4376434477789894358[3] = 0;
   out_4376434477789894358[4] = 0;
   out_4376434477789894358[5] = 0;
   out_4376434477789894358[6] = 0;
   out_4376434477789894358[7] = 0;
   out_4376434477789894358[8] = 0;
   out_4376434477789894358[9] = 0;
   out_4376434477789894358[10] = 0;
   out_4376434477789894358[11] = 0;
   out_4376434477789894358[12] = 0;
   out_4376434477789894358[13] = 0;
   out_4376434477789894358[14] = 0;
   out_4376434477789894358[15] = 0;
   out_4376434477789894358[16] = 0;
   out_4376434477789894358[17] = 0;
   out_4376434477789894358[18] = 0;
   out_4376434477789894358[19] = 0;
   out_4376434477789894358[20] = 0;
   out_4376434477789894358[21] = 0;
   out_4376434477789894358[22] = 0;
   out_4376434477789894358[23] = 1;
   out_4376434477789894358[24] = 0;
   out_4376434477789894358[25] = 0;
   out_4376434477789894358[26] = 0;
   out_4376434477789894358[27] = 0;
   out_4376434477789894358[28] = 0;
   out_4376434477789894358[29] = 0;
   out_4376434477789894358[30] = 0;
   out_4376434477789894358[31] = 0;
   out_4376434477789894358[32] = 0;
   out_4376434477789894358[33] = 0;
   out_4376434477789894358[34] = 0;
   out_4376434477789894358[35] = 0;
   out_4376434477789894358[36] = 0;
   out_4376434477789894358[37] = 0;
   out_4376434477789894358[38] = 0;
   out_4376434477789894358[39] = 0;
   out_4376434477789894358[40] = 0;
   out_4376434477789894358[41] = 0;
   out_4376434477789894358[42] = 0;
   out_4376434477789894358[43] = 0;
   out_4376434477789894358[44] = 0;
   out_4376434477789894358[45] = 0;
   out_4376434477789894358[46] = 1;
   out_4376434477789894358[47] = 0;
   out_4376434477789894358[48] = 0;
   out_4376434477789894358[49] = 0;
   out_4376434477789894358[50] = 0;
   out_4376434477789894358[51] = 0;
   out_4376434477789894358[52] = 0;
   out_4376434477789894358[53] = 0;
   out_4376434477789894358[54] = 0;
   out_4376434477789894358[55] = 0;
   out_4376434477789894358[56] = 0;
   out_4376434477789894358[57] = 0;
   out_4376434477789894358[58] = 0;
   out_4376434477789894358[59] = 0;
   out_4376434477789894358[60] = 0;
   out_4376434477789894358[61] = 0;
   out_4376434477789894358[62] = 0;
   out_4376434477789894358[63] = 0;
   out_4376434477789894358[64] = 0;
   out_4376434477789894358[65] = 0;
}
void h_35(double *state, double *unused, double *out_973169168518443631) {
   out_973169168518443631[0] = state[7];
   out_973169168518443631[1] = state[8];
   out_973169168518443631[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7121997510114908067) {
   out_7121997510114908067[0] = 0;
   out_7121997510114908067[1] = 0;
   out_7121997510114908067[2] = 0;
   out_7121997510114908067[3] = 0;
   out_7121997510114908067[4] = 0;
   out_7121997510114908067[5] = 0;
   out_7121997510114908067[6] = 0;
   out_7121997510114908067[7] = 1;
   out_7121997510114908067[8] = 0;
   out_7121997510114908067[9] = 0;
   out_7121997510114908067[10] = 0;
   out_7121997510114908067[11] = 0;
   out_7121997510114908067[12] = 0;
   out_7121997510114908067[13] = 0;
   out_7121997510114908067[14] = 0;
   out_7121997510114908067[15] = 0;
   out_7121997510114908067[16] = 0;
   out_7121997510114908067[17] = 0;
   out_7121997510114908067[18] = 0;
   out_7121997510114908067[19] = 0;
   out_7121997510114908067[20] = 0;
   out_7121997510114908067[21] = 0;
   out_7121997510114908067[22] = 0;
   out_7121997510114908067[23] = 0;
   out_7121997510114908067[24] = 0;
   out_7121997510114908067[25] = 0;
   out_7121997510114908067[26] = 0;
   out_7121997510114908067[27] = 0;
   out_7121997510114908067[28] = 0;
   out_7121997510114908067[29] = 0;
   out_7121997510114908067[30] = 1;
   out_7121997510114908067[31] = 0;
   out_7121997510114908067[32] = 0;
   out_7121997510114908067[33] = 0;
   out_7121997510114908067[34] = 0;
   out_7121997510114908067[35] = 0;
   out_7121997510114908067[36] = 0;
   out_7121997510114908067[37] = 0;
   out_7121997510114908067[38] = 0;
   out_7121997510114908067[39] = 0;
   out_7121997510114908067[40] = 0;
   out_7121997510114908067[41] = 0;
   out_7121997510114908067[42] = 0;
   out_7121997510114908067[43] = 0;
   out_7121997510114908067[44] = 0;
   out_7121997510114908067[45] = 0;
   out_7121997510114908067[46] = 0;
   out_7121997510114908067[47] = 0;
   out_7121997510114908067[48] = 0;
   out_7121997510114908067[49] = 0;
   out_7121997510114908067[50] = 0;
   out_7121997510114908067[51] = 0;
   out_7121997510114908067[52] = 0;
   out_7121997510114908067[53] = 1;
   out_7121997510114908067[54] = 0;
   out_7121997510114908067[55] = 0;
   out_7121997510114908067[56] = 0;
   out_7121997510114908067[57] = 0;
   out_7121997510114908067[58] = 0;
   out_7121997510114908067[59] = 0;
   out_7121997510114908067[60] = 0;
   out_7121997510114908067[61] = 0;
   out_7121997510114908067[62] = 0;
   out_7121997510114908067[63] = 0;
   out_7121997510114908067[64] = 0;
   out_7121997510114908067[65] = 0;
}
void h_32(double *state, double *unused, double *out_7758322852165358824) {
   out_7758322852165358824[0] = state[3];
   out_7758322852165358824[1] = state[4];
   out_7758322852165358824[2] = state[5];
   out_7758322852165358824[3] = state[6];
}
void H_32(double *state, double *unused, double *out_207133006420791711) {
   out_207133006420791711[0] = 0;
   out_207133006420791711[1] = 0;
   out_207133006420791711[2] = 0;
   out_207133006420791711[3] = 1;
   out_207133006420791711[4] = 0;
   out_207133006420791711[5] = 0;
   out_207133006420791711[6] = 0;
   out_207133006420791711[7] = 0;
   out_207133006420791711[8] = 0;
   out_207133006420791711[9] = 0;
   out_207133006420791711[10] = 0;
   out_207133006420791711[11] = 0;
   out_207133006420791711[12] = 0;
   out_207133006420791711[13] = 0;
   out_207133006420791711[14] = 0;
   out_207133006420791711[15] = 0;
   out_207133006420791711[16] = 0;
   out_207133006420791711[17] = 0;
   out_207133006420791711[18] = 0;
   out_207133006420791711[19] = 0;
   out_207133006420791711[20] = 0;
   out_207133006420791711[21] = 0;
   out_207133006420791711[22] = 0;
   out_207133006420791711[23] = 0;
   out_207133006420791711[24] = 0;
   out_207133006420791711[25] = 0;
   out_207133006420791711[26] = 1;
   out_207133006420791711[27] = 0;
   out_207133006420791711[28] = 0;
   out_207133006420791711[29] = 0;
   out_207133006420791711[30] = 0;
   out_207133006420791711[31] = 0;
   out_207133006420791711[32] = 0;
   out_207133006420791711[33] = 0;
   out_207133006420791711[34] = 0;
   out_207133006420791711[35] = 0;
   out_207133006420791711[36] = 0;
   out_207133006420791711[37] = 0;
   out_207133006420791711[38] = 0;
   out_207133006420791711[39] = 0;
   out_207133006420791711[40] = 0;
   out_207133006420791711[41] = 0;
   out_207133006420791711[42] = 0;
   out_207133006420791711[43] = 0;
   out_207133006420791711[44] = 0;
   out_207133006420791711[45] = 0;
   out_207133006420791711[46] = 0;
   out_207133006420791711[47] = 0;
   out_207133006420791711[48] = 0;
   out_207133006420791711[49] = 1;
   out_207133006420791711[50] = 0;
   out_207133006420791711[51] = 0;
   out_207133006420791711[52] = 0;
   out_207133006420791711[53] = 0;
   out_207133006420791711[54] = 0;
   out_207133006420791711[55] = 0;
   out_207133006420791711[56] = 0;
   out_207133006420791711[57] = 0;
   out_207133006420791711[58] = 0;
   out_207133006420791711[59] = 0;
   out_207133006420791711[60] = 0;
   out_207133006420791711[61] = 0;
   out_207133006420791711[62] = 0;
   out_207133006420791711[63] = 0;
   out_207133006420791711[64] = 0;
   out_207133006420791711[65] = 0;
   out_207133006420791711[66] = 0;
   out_207133006420791711[67] = 0;
   out_207133006420791711[68] = 0;
   out_207133006420791711[69] = 0;
   out_207133006420791711[70] = 0;
   out_207133006420791711[71] = 0;
   out_207133006420791711[72] = 1;
   out_207133006420791711[73] = 0;
   out_207133006420791711[74] = 0;
   out_207133006420791711[75] = 0;
   out_207133006420791711[76] = 0;
   out_207133006420791711[77] = 0;
   out_207133006420791711[78] = 0;
   out_207133006420791711[79] = 0;
   out_207133006420791711[80] = 0;
   out_207133006420791711[81] = 0;
   out_207133006420791711[82] = 0;
   out_207133006420791711[83] = 0;
   out_207133006420791711[84] = 0;
   out_207133006420791711[85] = 0;
   out_207133006420791711[86] = 0;
   out_207133006420791711[87] = 0;
}
void h_13(double *state, double *unused, double *out_7312642582867837773) {
   out_7312642582867837773[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7312642582867837773[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7312642582867837773[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8325270915890510603) {
   out_8325270915890510603[0] = 0;
   out_8325270915890510603[1] = 0;
   out_8325270915890510603[2] = 0;
   out_8325270915890510603[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8325270915890510603[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8325270915890510603[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8325270915890510603[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8325270915890510603[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8325270915890510603[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8325270915890510603[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8325270915890510603[10] = 0;
   out_8325270915890510603[11] = 0;
   out_8325270915890510603[12] = 0;
   out_8325270915890510603[13] = 0;
   out_8325270915890510603[14] = 0;
   out_8325270915890510603[15] = 0;
   out_8325270915890510603[16] = 0;
   out_8325270915890510603[17] = 0;
   out_8325270915890510603[18] = 0;
   out_8325270915890510603[19] = 0;
   out_8325270915890510603[20] = 0;
   out_8325270915890510603[21] = 0;
   out_8325270915890510603[22] = 0;
   out_8325270915890510603[23] = 0;
   out_8325270915890510603[24] = 0;
   out_8325270915890510603[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8325270915890510603[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8325270915890510603[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8325270915890510603[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8325270915890510603[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8325270915890510603[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8325270915890510603[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8325270915890510603[32] = 0;
   out_8325270915890510603[33] = 0;
   out_8325270915890510603[34] = 0;
   out_8325270915890510603[35] = 0;
   out_8325270915890510603[36] = 0;
   out_8325270915890510603[37] = 0;
   out_8325270915890510603[38] = 0;
   out_8325270915890510603[39] = 0;
   out_8325270915890510603[40] = 0;
   out_8325270915890510603[41] = 0;
   out_8325270915890510603[42] = 0;
   out_8325270915890510603[43] = 0;
   out_8325270915890510603[44] = 0;
   out_8325270915890510603[45] = 0;
   out_8325270915890510603[46] = 0;
   out_8325270915890510603[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8325270915890510603[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8325270915890510603[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8325270915890510603[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8325270915890510603[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8325270915890510603[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8325270915890510603[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8325270915890510603[54] = 0;
   out_8325270915890510603[55] = 0;
   out_8325270915890510603[56] = 0;
   out_8325270915890510603[57] = 0;
   out_8325270915890510603[58] = 0;
   out_8325270915890510603[59] = 0;
   out_8325270915890510603[60] = 0;
   out_8325270915890510603[61] = 0;
   out_8325270915890510603[62] = 0;
   out_8325270915890510603[63] = 0;
   out_8325270915890510603[64] = 0;
   out_8325270915890510603[65] = 0;
}
void h_14(double *state, double *unused, double *out_2936430445939327715) {
   out_2936430445939327715[0] = state[10];
   out_2936430445939327715[1] = state[11];
   out_2936430445939327715[2] = state[12];
}
void H_14(double *state, double *unused, double *out_401832283612476792) {
   out_401832283612476792[0] = 0;
   out_401832283612476792[1] = 0;
   out_401832283612476792[2] = 0;
   out_401832283612476792[3] = 0;
   out_401832283612476792[4] = 0;
   out_401832283612476792[5] = 0;
   out_401832283612476792[6] = 0;
   out_401832283612476792[7] = 0;
   out_401832283612476792[8] = 0;
   out_401832283612476792[9] = 0;
   out_401832283612476792[10] = 1;
   out_401832283612476792[11] = 0;
   out_401832283612476792[12] = 0;
   out_401832283612476792[13] = 0;
   out_401832283612476792[14] = 0;
   out_401832283612476792[15] = 0;
   out_401832283612476792[16] = 0;
   out_401832283612476792[17] = 0;
   out_401832283612476792[18] = 0;
   out_401832283612476792[19] = 0;
   out_401832283612476792[20] = 0;
   out_401832283612476792[21] = 0;
   out_401832283612476792[22] = 0;
   out_401832283612476792[23] = 0;
   out_401832283612476792[24] = 0;
   out_401832283612476792[25] = 0;
   out_401832283612476792[26] = 0;
   out_401832283612476792[27] = 0;
   out_401832283612476792[28] = 0;
   out_401832283612476792[29] = 0;
   out_401832283612476792[30] = 0;
   out_401832283612476792[31] = 0;
   out_401832283612476792[32] = 0;
   out_401832283612476792[33] = 1;
   out_401832283612476792[34] = 0;
   out_401832283612476792[35] = 0;
   out_401832283612476792[36] = 0;
   out_401832283612476792[37] = 0;
   out_401832283612476792[38] = 0;
   out_401832283612476792[39] = 0;
   out_401832283612476792[40] = 0;
   out_401832283612476792[41] = 0;
   out_401832283612476792[42] = 0;
   out_401832283612476792[43] = 0;
   out_401832283612476792[44] = 0;
   out_401832283612476792[45] = 0;
   out_401832283612476792[46] = 0;
   out_401832283612476792[47] = 0;
   out_401832283612476792[48] = 0;
   out_401832283612476792[49] = 0;
   out_401832283612476792[50] = 0;
   out_401832283612476792[51] = 0;
   out_401832283612476792[52] = 0;
   out_401832283612476792[53] = 0;
   out_401832283612476792[54] = 0;
   out_401832283612476792[55] = 0;
   out_401832283612476792[56] = 1;
   out_401832283612476792[57] = 0;
   out_401832283612476792[58] = 0;
   out_401832283612476792[59] = 0;
   out_401832283612476792[60] = 0;
   out_401832283612476792[61] = 0;
   out_401832283612476792[62] = 0;
   out_401832283612476792[63] = 0;
   out_401832283612476792[64] = 0;
   out_401832283612476792[65] = 0;
}
void h_33(double *state, double *unused, double *out_1511145513146314395) {
   out_1511145513146314395[0] = state[16];
   out_1511145513146314395[1] = state[17];
   out_1511145513146314395[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8174189558955785945) {
   out_8174189558955785945[0] = 0;
   out_8174189558955785945[1] = 0;
   out_8174189558955785945[2] = 0;
   out_8174189558955785945[3] = 0;
   out_8174189558955785945[4] = 0;
   out_8174189558955785945[5] = 0;
   out_8174189558955785945[6] = 0;
   out_8174189558955785945[7] = 0;
   out_8174189558955785945[8] = 0;
   out_8174189558955785945[9] = 0;
   out_8174189558955785945[10] = 0;
   out_8174189558955785945[11] = 0;
   out_8174189558955785945[12] = 0;
   out_8174189558955785945[13] = 0;
   out_8174189558955785945[14] = 0;
   out_8174189558955785945[15] = 0;
   out_8174189558955785945[16] = 1;
   out_8174189558955785945[17] = 0;
   out_8174189558955785945[18] = 0;
   out_8174189558955785945[19] = 0;
   out_8174189558955785945[20] = 0;
   out_8174189558955785945[21] = 0;
   out_8174189558955785945[22] = 0;
   out_8174189558955785945[23] = 0;
   out_8174189558955785945[24] = 0;
   out_8174189558955785945[25] = 0;
   out_8174189558955785945[26] = 0;
   out_8174189558955785945[27] = 0;
   out_8174189558955785945[28] = 0;
   out_8174189558955785945[29] = 0;
   out_8174189558955785945[30] = 0;
   out_8174189558955785945[31] = 0;
   out_8174189558955785945[32] = 0;
   out_8174189558955785945[33] = 0;
   out_8174189558955785945[34] = 0;
   out_8174189558955785945[35] = 0;
   out_8174189558955785945[36] = 0;
   out_8174189558955785945[37] = 0;
   out_8174189558955785945[38] = 0;
   out_8174189558955785945[39] = 1;
   out_8174189558955785945[40] = 0;
   out_8174189558955785945[41] = 0;
   out_8174189558955785945[42] = 0;
   out_8174189558955785945[43] = 0;
   out_8174189558955785945[44] = 0;
   out_8174189558955785945[45] = 0;
   out_8174189558955785945[46] = 0;
   out_8174189558955785945[47] = 0;
   out_8174189558955785945[48] = 0;
   out_8174189558955785945[49] = 0;
   out_8174189558955785945[50] = 0;
   out_8174189558955785945[51] = 0;
   out_8174189558955785945[52] = 0;
   out_8174189558955785945[53] = 0;
   out_8174189558955785945[54] = 0;
   out_8174189558955785945[55] = 0;
   out_8174189558955785945[56] = 0;
   out_8174189558955785945[57] = 0;
   out_8174189558955785945[58] = 0;
   out_8174189558955785945[59] = 0;
   out_8174189558955785945[60] = 0;
   out_8174189558955785945[61] = 0;
   out_8174189558955785945[62] = 1;
   out_8174189558955785945[63] = 0;
   out_8174189558955785945[64] = 0;
   out_8174189558955785945[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_604043209846572052) {
  H(in_vec, out_604043209846572052);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5815918021574383256) {
  err_fun(nom_x, delta_x, out_5815918021574383256);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_405016028537791310) {
  inv_err_fun(nom_x, true_x, out_405016028537791310);
}
void live_H_mod_fun(double *state, double *out_6060298500008698159) {
  H_mod_fun(state, out_6060298500008698159);
}
void live_f_fun(double *state, double dt, double *out_234054100436222404) {
  f_fun(state,  dt, out_234054100436222404);
}
void live_F_fun(double *state, double dt, double *out_98640869369304068) {
  F_fun(state,  dt, out_98640869369304068);
}
void live_h_4(double *state, double *unused, double *out_1697093702201744346) {
  h_4(state, unused, out_1697093702201744346);
}
void live_H_4(double *state, double *unused, double *out_643021930242067437) {
  H_4(state, unused, out_643021930242067437);
}
void live_h_9(double *state, double *unused, double *out_2936430445939327715) {
  h_9(state, unused, out_2936430445939327715);
}
void live_H_9(double *state, double *unused, double *out_401832283612476792) {
  H_9(state, unused, out_401832283612476792);
}
void live_h_10(double *state, double *unused, double *out_4514559468563206809) {
  h_10(state, unused, out_4514559468563206809);
}
void live_H_10(double *state, double *unused, double *out_1343937887048594844) {
  H_10(state, unused, out_1343937887048594844);
}
void live_h_12(double *state, double *unused, double *out_4782454166066213906) {
  h_12(state, unused, out_4782454166066213906);
}
void live_H_12(double *state, double *unused, double *out_4376434477789894358) {
  H_12(state, unused, out_4376434477789894358);
}
void live_h_35(double *state, double *unused, double *out_973169168518443631) {
  h_35(state, unused, out_973169168518443631);
}
void live_H_35(double *state, double *unused, double *out_7121997510114908067) {
  H_35(state, unused, out_7121997510114908067);
}
void live_h_32(double *state, double *unused, double *out_7758322852165358824) {
  h_32(state, unused, out_7758322852165358824);
}
void live_H_32(double *state, double *unused, double *out_207133006420791711) {
  H_32(state, unused, out_207133006420791711);
}
void live_h_13(double *state, double *unused, double *out_7312642582867837773) {
  h_13(state, unused, out_7312642582867837773);
}
void live_H_13(double *state, double *unused, double *out_8325270915890510603) {
  H_13(state, unused, out_8325270915890510603);
}
void live_h_14(double *state, double *unused, double *out_2936430445939327715) {
  h_14(state, unused, out_2936430445939327715);
}
void live_H_14(double *state, double *unused, double *out_401832283612476792) {
  H_14(state, unused, out_401832283612476792);
}
void live_h_33(double *state, double *unused, double *out_1511145513146314395) {
  h_33(state, unused, out_1511145513146314395);
}
void live_H_33(double *state, double *unused, double *out_8174189558955785945) {
  H_33(state, unused, out_8174189558955785945);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
